--TODO:
Review code to look for anything that could go wrong
-util (except "ref")

Update TODO and NOTES with stuff from RebuildLib for use in BBX

Modify PrintUtility so that it supports "ref" functions
Add remaining NIO classes (make duplicate of native NIO)
Finish FilePicker
Do the todos in GestureField
Rewrite the monstrosity which is CustomButtonField (it was the first field I ever wrote and it shows)

Look over Path to update/modify getSystemPath so it will work correctly and clean up other functions so they use try/catch/finally
Look over following TIFF tags to determine how values with the high bit set should be handled:
-ImageHeightTag
-ImageWidthTag
-RowsPerStripTag (additional, think through getStripsPerImage)
Look over all tags to determine if there are any areas of ambiguity or ways that an invalid value could be passed in (such as wanting the value 0x80000000, which wouldn't work because Java uses signed numbers only)

Rewrite WBMPEncoder so it produces the correct image format (http://en.wikipedia.org/wiki/Wireless_Application_Protocol_Bitmap_Format)
Create GIF and BMP Encoders
Modify PrintUtility so that the print formats are extendable (use StringUtilities as the front end, PrintUtility as the back end)
Work on TIFF encoding

--DEFINES:
NO_SIGNING - REMOVES functionality that requires signing. This does not cover the LARGENUMBER_USE_NATIVE_BIGINT define.
BIT_CONVERTER_USE_IO - Allow the use of the native IO functions to do the actual conversion of primitives to bytes (with manual conversion happening otherwise, or if the IO conversion fails)
LARGENUMBER_USE_NATIVE_BIGINT - BlackBerry's Crypto system has built in Large Number support. It requires signing but could be faster since it is native.

--NOTES:
-Some previous projects I worked on use the same code as this project or has "contributed" code to this project. Changes in names are purely for the project, licenses should remain the same.

The basic idea of this library is to allow for the use of some "high revision" code and general libraries that otherwise would require a higher OS version or extra 
libraries to be included instead of just one, BlackBerry specific one.

Only the classes that could be implemented are implemented.

Desired additions:
-networking/messaging API
-kSoap
-Authenticate (oAuth, etc.) ??
-String formatting (only .Net left)
-DeviceCapability API
-Camera Overlay
-GestureField
-"Slider fields" from OS 6.0
-RegEx
-Plugin system
-Emoticon field

Long term, personal Todo: The Plugin system is one of the most important systems because it will allow the base library to be included and extras like Graphics or GLUT to be 
included only when desired.

Plugins:
///
//Pusdo code
public static Plugin[] getPlugin(final String pluginPath)
{
Class clazz = Class.forName(pluginPath + ".rebuild.plugin.Master");
rebuild.plugin.Master master = (rebuild.plugin.Master)clazz.newInstance();
Plugin[] pluginComponents = master.getComponents();
for(int i = 0; i < master.componentCount(); i++)
{
pluginComponents[i].initialize(**stuff**);
}
return pluginComponents;
}
///

Apps will need to implement a register and use the BBX version of components to handle certain components. Must be designed so that only a simple package change is needed
to switch to the new components.